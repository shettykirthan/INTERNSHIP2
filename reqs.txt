# Complete API Examples with Full URLs and Request Bodies

## Base URL
```
http://localhost:3000
```

## 1. SECTIONS API ENDPOINTS

### 1.1 Create a New Section
**Method:** POST  
**URL:** `http://localhost:3000/api/sections`  
**Headers:** `Content-Type: application/json`  
**Body:**
```json
{
  "sectionname": "Electronics",
  "desc": "Electronic items and gadgets"
}
```

**cURL Example:**
```bash
curl -X POST http://localhost:3000/api/sections \
  -H "Content-Type: application/json" \
  -d '{
    "sectionname": "Electronics",
    "desc": "Electronic items and gadgets"
  }'
```

**Response:**
```json
{
  "_id": 1,
  "sectionname": "Electronics",
  "desc": "Electronic items and gadgets",
  "items": 0,
  "itemsArray": [],
  "createdAt": "2024-01-15T10:30:00.000Z",
  "updatedAt": "2024-01-15T10:30:00.000Z"
}
```

### 1.2 Get All Sections
**Method:** GET  
**URL:** `http://localhost:3000/api/sections`  
**Body:** None

**cURL Example:**
```bash
curl http://localhost:3000/api/sections
```

**Response:**
```json
[
  {
    "_id": 1,
    "sectionname": "Electronics",
    "desc": "Electronic items and gadgets",
    "items": 2,
    "itemsArray": [
      {
        "itemId": "Electronics1",
        "itemname": "Laptop",
        "availableCount": 10
      },
      {
        "itemId": "Electronics2",
        "itemname": "Mouse",
        "availableCount": 25
      }
    ],
    "createdAt": "2024-01-15T10:30:00.000Z",
    "updatedAt": "2024-01-15T10:35:00.000Z"
  }
]
```

### 1.3 Get Section by ID
**Method:** GET  
**URL:** `http://localhost:3000/api/sections/1`  
**Body:** None

**cURL Example:**
```bash
curl http://localhost:3000/api/sections/1
```

### 1.4 Update Section
**Method:** PUT  
**URL:** `http://localhost:3000/api/sections/1`  
**Headers:** `Content-Type: application/json`  
**Body:**
```json
{
  "sectionname": "Electronics & Gadgets",
  "desc": "Updated description for electronic items"
}
```

**cURL Example:**
```bash
curl -X PUT http://localhost:3000/api/sections/1 \
  -H "Content-Type: application/json" \
  -d '{
    "sectionname": "Electronics & Gadgets",
    "desc": "Updated description for electronic items"
  }'
```

### 1.5 Delete Section
**Method:** DELETE  
**URL:** `http://localhost:3000/api/sections/1`  
**Body:** None

**cURL Example:**
```bash
curl -X DELETE http://localhost:3000/api/sections/1
```

**Response:**
```json
{
  "message": "Section deleted successfully"
}
```

## 2. ITEMS API ENDPOINTS

### 2.1 Add Item to Section
**Method:** POST  
**URL:** `http://localhost:3000/api/items/section/1`  
**Headers:** `Content-Type: application/json`  
**Body:**
```json
{
  "itemname": "Laptop",
  "availableCount": 10
}
```

**cURL Example:**
```bash
curl -X POST http://localhost:3000/api/items/section/1 \
  -H "Content-Type: application/json" \
  -d '{
    "itemname": "Laptop",
    "availableCount": 10
  }'
```

**Response:**
```json
{
  "itemId": "Electronics1",
  "itemname": "Laptop",
  "availableCount": 10
}
```

### 2.2 Get All Items from a Section
**Method:** GET  
**URL:** `http://localhost:3000/api/items/section/1`  
**Body:** None

**cURL Example:**
```bash
curl http://localhost:3000/api/items/section/1
```

**Response:**
```json
[
  {
    "itemId": "Electronics1",
    "itemname": "Laptop",
    "availableCount": 10
  },
  {
    "itemId": "Electronics2",
    "itemname": "Mouse",
    "availableCount": 25
  }
]
```

### 2.3 Get Specific Item from Section
**Method:** GET  
**URL:** `http://localhost:3000/api/items/section/1/Electronics1`  
**Body:** None

**cURL Example:**
```bash
curl http://localhost:3000/api/items/section/1/Electronics1
```

**Response:**
```json
{
  "itemId": "Electronics1",
  "itemname": "Laptop",
  "availableCount": 10
}
```

### 2.4 Update Item in Section
**Method:** PUT  
**URL:** `http://localhost:3000/api/items/section/1/Electronics1`  
**Headers:** `Content-Type: application/json`  
**Body:**
```json
{
  "itemname": "Gaming Laptop",
  "availableCount": 15
}
```

**cURL Example:**
```bash
curl -X PUT http://localhost:3000/api/items/section/1/Electronics1 \
  -H "Content-Type: application/json" \
  -d '{
    "itemname": "Gaming Laptop",
    "availableCount": 15
  }'
```

**Response:**
```json
{
  "itemId": "Electronics1",
  "itemname": "Gaming Laptop",
  "availableCount": 15
}
```

### 2.5 Delete Item from Section
**Method:** DELETE  
**URL:** `http://localhost:3000/api/items/section/1/Electronics1`  
**Body:** None

**cURL Example:**
```bash
curl -X DELETE http://localhost:3000/api/items/section/1/Electronics1
```

**Response:**
```json
{
  "message": "Item deleted successfully"
}
```

### 2.6 Get All Items Across All Sections
**Method:** GET  
**URL:** `http://localhost:3000/api/items`  
**Body:** None

**cURL Example:**
```bash
curl http://localhost:3000/api/items
```

**Response:**
```json
[
  {
    "itemId": "Electronics1",
    "itemname": "Laptop",
    "availableCount": 10,
    "sectionName": "Electronics",
    "sectionId": 1
  },
  {
    "itemId": "Electronics2",
    "itemname": "Mouse",
    "availableCount": 25,
    "sectionName": "Electronics",
    "sectionId": 1
  },
  {
    "itemId": "Books1",
    "itemname": "JavaScript Guide",
    "availableCount": 5,
    "sectionName": "Books",
    "sectionId": 2
  }
]
```

## 3. COMPLETE WORKFLOW EXAMPLES

### 3.1 Create Multiple Sections
```bash
# Create Electronics section
curl -X POST http://localhost:3000/api/sections \
  -H "Content-Type: application/json" \
  -d '{"sectionname": "Electronics", "desc": "Electronic items"}'

# Create Books section
curl -X POST http://localhost:3000/api/sections \
  -H "Content-Type: application/json" \
  -d '{"sectionname": "Books", "desc": "Educational books"}'

# Create Clothing section
curl -X POST http://localhost:3000/api/sections \
  -H "Content-Type: application/json" \
  -d '{"sectionname": "Clothing", "desc": "Apparel and accessories"}'
```

### 3.2 Add Items to Different Sections
```bash
# Add items to Electronics section (ID: 1)
curl -X POST http://localhost:3000/api/items/section/1 \
  -H "Content-Type: application/json" \
  -d '{"itemname": "Laptop", "availableCount": 10}'

curl -X POST http://localhost:3000/api/items/section/1 \
  -H "Content-Type: application/json" \
  -d '{"itemname": "Mouse", "availableCount": 25}'

# Add items to Books section (ID: 2)
curl -X POST http://localhost:3000/api/items/section/2 \
  -H "Content-Type: application/json" \
  -d '{"itemname": "JavaScript Guide", "availableCount": 5}'

curl -X POST http://localhost:3000/api/items/section/2 \
  -H "Content-Type: application/json" \
  -d '{"itemname": "Python Handbook", "availableCount": 8}'
```

### 3.3 Testing Item ID Generation
After adding items, you'll see:
- Electronics section items: `Electronics1`, `Electronics2`
- Books section items: `Books1`, `Books2`
- Clothing section items: `Clothing1`, `Clothing2`

## 4. TESTING WITH POSTMAN

### Import these as Postman requests:

1. **Create Section:**
   - Method: POST
   - URL: `http://localhost:3000/api/sections`
   - Headers: `Content-Type: application/json`
   - Body (raw JSON): `{"sectionname": "Electronics", "desc": "Electronic items"}`

2. **Add Item:**
   - Method: POST
   - URL: `http://localhost:3000/api/items/section/1`
   - Headers: `Content-Type: application/json`
   - Body (raw JSON): `{"itemname": "Laptop", "availableCount": 10}`

3. **Get All Sections:**
   - Method: GET
   - URL: `http://localhost:3000/api/sections`

4. **Get All Items:**
   - Method: GET
   - URL: `http://localhost:3000/api/items`

## 5. ERROR RESPONSES

### 5.1 Section Not Found
**URL:** `http://localhost:3000/api/sections/999`
**Response:**
```json
{
  "error": "Section not found"
}
```

### 5.2 Item Already Exists
**URL:** `http://localhost:3000/api/items/section/1`
**Body:** `{"itemname": "Laptop"}` (if Laptop already exists)
**Response:**
```json
{
  "error": "Item already exists in this section"
}
```

### 5.3 Missing Required Fields
**URL:** `http://localhost:3000/api/sections`
**Body:** `{"desc": "Only description"}` (missing sectionname)
**Response:**
```json
{
  "error": "Section name is required"
}
```

## 6. QUICK START COMMANDS

```bash
# Start the server
npm run dev

# Test basic functionality
curl http://localhost:3000/

# Create your first section
curl -X POST http://localhost:3000/api/sections \
  -H "Content-Type: application/json" \
  -d '{"sectionname": "TestSection", "desc": "My first section"}'

# Add your first item
curl -X POST http://localhost:3000/api/items/section/1 \
  -H "Content-Type: application/json" \
  -d '{"itemname": "TestItem", "availableCount": 5}'

# View all sections
curl http://localhost:3000/api/sections

# View all items
curl http://localhost:3000/api/items
```